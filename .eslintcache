[{"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\index.js":"1","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\App.js":"2","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\reportWebVitals.js":"3","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\routes\\routes.js":"4","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\start\\start.js":"5","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\mainView\\mainView.js":"6","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\services\\services.js":"7","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\countrieInfo\\countrieInfo.js":"8","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\countrie\\countrie.js":"9","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\searchBox\\searchBox.js":"10","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\dropdown\\dropdown.js":"11","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\header\\header.js":"12","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\allCountries\\allCountries.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":750,"mtime":1610900419453,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":258,"mtime":1610900399568,"results":"18","hashOfConfig":"15"},{"size":484,"mtime":1610899412825,"results":"19","hashOfConfig":"15"},{"size":2616,"mtime":1610906271154,"results":"20","hashOfConfig":"15"},{"size":351,"mtime":1610905893453,"results":"21","hashOfConfig":"15"},{"size":1697,"mtime":1610904306272,"results":"22","hashOfConfig":"15"},{"size":2164,"mtime":1610905748447,"results":"23","hashOfConfig":"15"},{"size":319,"mtime":1610905535981,"results":"24","hashOfConfig":"15"},{"size":541,"mtime":1610906083607,"results":"25","hashOfConfig":"15"},{"size":323,"mtime":1610906078938,"results":"26","hashOfConfig":"15"},{"size":874,"mtime":1610900819841,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"11b3h6y",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\index.js",[],["57","58"],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\App.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\reportWebVitals.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\routes\\routes.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\start\\start.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\mainView\\mainView.js",["59","60"],"import React, { useEffect, useState } from 'react';\r\nimport AllCountries from '../../components/allCountries/allCountries';\r\nimport Dropdown from '../../components/dropdown/dropdown';\r\nimport SearchBox from '../../components/searchBox/searchBox';\r\nimport { allCountriesUrl, regionUrl } from '../../constants/services/services';\r\nimport Header from '../header/header';\r\n\r\nconst MainView = () => {\r\n\r\n    const [countries, setCountries] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [region, setRegion] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [region])\r\n\r\n    useEffect(() => {\r\n        if (search) {\r\n            const searched = countries.filter(country => {\r\n                return country.name.toLowerCase().includes(search.toLowerCase())\r\n             })\r\n\r\n             setCountries(searched)\r\n        }\r\n    }, [search])\r\n\r\n    const fetchData = () => {\r\n        if (region === '' || region === 'All') {\r\n            getData();\r\n        } else {\r\n            getRegionCountrie()\r\n        }\r\n    }\r\n\r\n    const getData = async() => {\r\n        try{\r\n            const {data} = await allCountriesUrl();\r\n            setCountries(data);\r\n            console.log(data);\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const searchHandler = (e) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n\r\n    const regionHandler = (e) => {\r\n        setRegion(e.target.value.toLowerCase())\r\n        console.log(region)\r\n    }\r\n\r\n    const getRegionCountrie =async() => {\r\n        try{\r\n            const{data} = await regionUrl(region);\r\n            setCountries(data);\r\n            console.log(data)\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    \r\n    return(\r\n    \r\n        <section className=\"section-main\">\r\n            <Header />\r\n            <SearchBox \r\n                placeholder=\"Search Country\"\r\n                onChange={searchHandler} />\r\n                \r\n            <Dropdown onClick={regionHandler}/>\r\n            {countries.map((countrie) => {\r\n                        return(\r\n                            <AllCountries\r\n                                key={countrie.name} \r\n                                name={countrie.name}\r\n                                capital={countrie.capital}\r\n                                region={countrie.region}\r\n                                population={countrie.population}\r\n                                flag={countrie.flag}\r\n                                />\r\n                        )})}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MainView;","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\services\\services.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\countrieInfo\\countrieInfo.js",["61","62"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router';\r\nimport Countrie from '../../components/countrie/countrie';\r\nimport { oneCountrieUrl } from '../../constants/services/services';\r\n\r\nconst CountrieInfo = () => {\r\n    const [countrieInfo, setCountrieInfo] = useState([]);\r\n    const match = useRouteMatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    const getData = async() => {\r\n        const{name} = match.params;\r\n        try{\r\n            const {data} = await oneCountrieUrl(name);\r\n            setCountrieInfo(data);\r\n            console.log(countrieInfo);\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {countrieInfo.map((countrie) => {\r\n                return(\r\n                    <Countrie\r\n                        key={countrie.name}\r\n                        name={countrie.name}\r\n                        flag={countrie.flag}\r\n                        nativeName={countrie.nativeName}\r\n                        population={countrie.population}\r\n                        region={countrie.region}\r\n                        subregion={countrie.subregion}\r\n                        capital={countrie.capital}\r\n                        topLevelDomain={countrie.topLevelDomain}\r\n                        borders={countrie.borders}\r\n                        currencies={countrie.currencies.map((curr) => curr.name)}\r\n                        languages={countrie.languages.map((lang) => lang.name)}\r\n                        />\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountrieInfo;","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\countrie\\countrie.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\searchBox\\searchBox.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\dropdown\\dropdown.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\header\\header.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\allCountries\\allCountries.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":16,"column":8,"nodeType":"69","endLine":16,"endColumn":16,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":26,"column":8,"nodeType":"69","endLine":26,"endColumn":16,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":9,"column":11,"nodeType":"75","messageId":"76","endLine":9,"endColumn":18},{"ruleId":"67","severity":1,"message":"77","line":13,"column":8,"nodeType":"69","endLine":13,"endColumn":10,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["81"],"React Hook useEffect has a missing dependency: 'countries'. Either include it or remove the dependency array.",["82"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [fetchData, region]",{"range":"90","text":"91"},"Update the dependencies array to be: [countries, search]",{"range":"92","text":"93"},"Update the dependencies array to be: [getData]",{"range":"94","text":"95"},[600,608],"[fetchData, region]",[875,883],"[countries, search]",[453,455],"[getData]"]