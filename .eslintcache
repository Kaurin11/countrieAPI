[{"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\index.js":"1","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\App.js":"2","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\reportWebVitals.js":"3","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\routes\\routes.js":"4","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\start\\start.js":"5","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\services\\services.js":"6","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\countrie\\countrie.js":"7","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\searchBox\\searchBox.js":"8","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\dropdown\\dropdown.js":"9","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\header\\header.js":"10","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\allCountries\\allCountries.js":"11","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\button\\button.js":"12","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\themeChange\\themeChange.js":"13","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\countrieDetail\\countrieDetail.js":"14","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\countrieHome\\countrieHome.js":"15","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\borderCountie\\borderCountrie.js":"16"},{"size":502,"mtime":1611162353167,"results":"17","hashOfConfig":"18"},{"size":965,"mtime":1611181388491,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":450,"mtime":1611180765402,"results":"21","hashOfConfig":"18"},{"size":724,"mtime":1611096828687,"results":"22","hashOfConfig":"18"},{"size":449,"mtime":1611180765406,"results":"23","hashOfConfig":"18"},{"size":3318,"mtime":1611180765406,"results":"24","hashOfConfig":"18"},{"size":459,"mtime":1611096828679,"results":"25","hashOfConfig":"18"},{"size":495,"mtime":1611096828671,"results":"26","hashOfConfig":"18"},{"size":433,"mtime":1611163050788,"results":"27","hashOfConfig":"18"},{"size":1193,"mtime":1611096828671,"results":"28","hashOfConfig":"18"},{"size":242,"mtime":1611096828671,"results":"29","hashOfConfig":"18"},{"size":980,"mtime":1611096828687,"results":"30","hashOfConfig":"18"},{"size":1475,"mtime":1611184215555,"results":"31","hashOfConfig":"18"},{"size":2424,"mtime":1611183627695,"results":"32","hashOfConfig":"18"},{"size":4664,"mtime":1611184215479,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"11b3h6y",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\index.js",[],["68","69"],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\App.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\reportWebVitals.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\routes\\routes.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\start\\start.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\services\\services.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\countrie\\countrie.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\searchBox\\searchBox.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\dropdown\\dropdown.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\header\\header.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\allCountries\\allCountries.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\button\\button.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\themeChange\\themeChange.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\countrieDetail\\countrieDetail.js",["70"],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\countrieHome\\countrieHome.js",["71","72"],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\borderCountie\\borderCountrie.js",["73","74"],"import React, { useEffect, useState } from \"react\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport {\r\n  getGenerteCountrieByLetterRoute,\r\n  getCountrieHomeRoute,\r\n} from \"../../constants/routes/routes\";\r\nimport { borderCountriUrl } from \"../../constants/services/services\";\r\nimport Header from \"../header/header\";\r\n\r\nconst BorderCountrie = () => {\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  const [borderCountry, setBorderCountry] = useState(null);\r\n  const [newCountry, setNewCoutry] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchNewData();\r\n  }, [newCountry]);\r\n\r\n  const selectCountryHandler = (border) => {\r\n    var lowerCaseName = border.toLowerCase();\r\n    history.push(getGenerteCountrieByLetterRoute(lowerCaseName));\r\n    setNewCoutry(true);\r\n  };\r\n\r\n  const fetchNewData = async () => {\r\n    return new Promise(async (resolve, reject) => {\r\n      const { code } = match.params;\r\n      try {\r\n        const { data } = await borderCountriUrl(code);\r\n        setBorderCountry(data);\r\n        resolve(data);\r\n        setNewCoutry(false);\r\n      } catch (err) {\r\n        console.error(err);\r\n        reject(err);\r\n      }\r\n    });\r\n  };\r\n\r\n  const goHomeHandler = async () => {\r\n    history.push(getCountrieHomeRoute());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {borderCountry && (\r\n        <div key={borderCountry.flag + borderCountry.name} className=\"country\">\r\n          <div className=\"row\">\r\n            <h1>\r\n              <button className=\"country--btn\" onClick={goHomeHandler}>\r\n                <ion-icon name=\"arrow-back-outline\"></ion-icon>HOME\r\n              </button>\r\n            </h1>\r\n            <div className=\"col-1-of-2 country-centar-flag\">\r\n              <img className=\"country__flag\" src={borderCountry.flag}></img>\r\n            </div>\r\n            <div className=\"col-1-of-2 country__content\">\r\n              <h1 className=\"u-margin-bottom-small\">{borderCountry.name}</h1>\r\n              <div className=\"row\">\r\n                <div className=\"col-1-of-2\">\r\n                  <p>\r\n                    <strong>Nativ Name:</strong>\r\n                    {borderCountry.nativeName}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Population: </strong>{\" \"}\r\n                    <NumberFormat\r\n                      value={borderCountry.population}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                    />\r\n                  </p>\r\n                  <p>\r\n                    <strong>Region:</strong> {borderCountry.region}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Subregion:</strong> {borderCountry.subregion}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Capital:</strong> {borderCountry.capital}\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-1-of-2\">\r\n                  <p className=\"country__content--domain\">\r\n                    <strong>Top Level Domain:</strong>{\" \"}\r\n                    {borderCountry.topLevelDomain}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Currencies:</strong>{\" \"}\r\n                    {borderCountry.currencies.map((cur) => cur.name)}\r\n                  </p>\r\n                  <p className=\"country--lang\">\r\n                    <strong>Languages:</strong>\r\n                    {borderCountry.languages.map((lang) => {\r\n                      return (\r\n                        <span\r\n                          className=\"country__content--lang-box\"\r\n                          key={lang.name}\r\n                        >\r\n                          {lang.name}\r\n                        </span>\r\n                      );\r\n                    })}{\" \"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"country__content--border\">\r\n                <p>\r\n                  <strong>Border Countrie:</strong>\r\n                </p>\r\n                {borderCountry.borders.map((border) => {\r\n                  return (\r\n                    <ul key={border}>\r\n                      <span\r\n                        onClick={() => selectCountryHandler(border)}\r\n                        className=\"country__content--border-box\"\r\n                      >\r\n                        <p>{border}</p>\r\n                      </span>\r\n                    </ul>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BorderCountrie;\r\n",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":13,"column":6,"nodeType":"81","endLine":13,"endColumn":8,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":17,"column":6,"nodeType":"81","endLine":17,"endColumn":14,"suggestions":"84"},{"ruleId":"79","severity":1,"message":"83","line":28,"column":6,"nodeType":"81","endLine":28,"endColumn":14,"suggestions":"85"},{"ruleId":"79","severity":1,"message":"86","line":19,"column":6,"nodeType":"81","endLine":19,"endColumn":18,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":58,"column":15,"nodeType":"90","endLine":58,"endColumn":71},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["94"],["95"],"React Hook useEffect has a missing dependency: 'fetchNewData'. Either include it or remove the dependency array.",["96"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [getData]",{"range":"105","text":"106"},"Update the dependencies array to be: [fetchData, region]",{"range":"107","text":"108"},"Update the dependencies array to be: [fetchData, search]",{"range":"109","text":"110"},"Update the dependencies array to be: [fetchNewData, newCountry]",{"range":"111","text":"112"},[438,440],"[getData]",[660,668],"[fetchData, region]",[949,957],"[fetchData, search]",[650,662],"[fetchNewData, newCountry]"]