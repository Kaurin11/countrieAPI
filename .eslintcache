[{"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\index.js":"1","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\App.js":"2","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\reportWebVitals.js":"3","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\routes\\routes.js":"4","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\start\\start.js":"5","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\services\\services.js":"6","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\countrie\\countrie.js":"7","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\searchBox\\searchBox.js":"8","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\dropdown\\dropdown.js":"9","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\header\\header.js":"10","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\allCountries\\allCountries.js":"11","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\button\\button.js":"12","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\themeChange\\themeChange.js":"13","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\countrieDetail\\countrieDetail.js":"14","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\countrieHome\\countrieHome.js":"15","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\borderCountie\\borderCountrie.js":"16"},{"size":502,"mtime":1611162353167,"results":"17","hashOfConfig":"18"},{"size":965,"mtime":1611181388491,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":450,"mtime":1611180765402,"results":"21","hashOfConfig":"18"},{"size":728,"mtime":1612979282330,"results":"22","hashOfConfig":"18"},{"size":449,"mtime":1611180765406,"results":"23","hashOfConfig":"18"},{"size":2768,"mtime":1613688462090,"results":"24","hashOfConfig":"18"},{"size":440,"mtime":1613593224563,"results":"25","hashOfConfig":"18"},{"size":516,"mtime":1613593840580,"results":"26","hashOfConfig":"18"},{"size":407,"mtime":1613557992814,"results":"27","hashOfConfig":"18"},{"size":1193,"mtime":1611096828671,"results":"28","hashOfConfig":"18"},{"size":242,"mtime":1611096828671,"results":"29","hashOfConfig":"18"},{"size":1136,"mtime":1613590897725,"results":"30","hashOfConfig":"18"},{"size":1807,"mtime":1613688462097,"results":"31","hashOfConfig":"18"},{"size":2496,"mtime":1613596101376,"results":"32","hashOfConfig":"18"},{"size":4206,"mtime":1613688462093,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"11b3h6y",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\index.js",[],["69","70"],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\App.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\reportWebVitals.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\routes\\routes.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\start\\start.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\services\\services.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\countrie\\countrie.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\searchBox\\searchBox.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\dropdown\\dropdown.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\header\\header.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\allCountries\\allCountries.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\button\\button.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\themeChange\\themeChange.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\countrieDetail\\countrieDetail.js",["71","72","73"],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\countrieHome\\countrieHome.js",["74","75"],"import React, { useEffect, useState } from \"react\";\r\nimport AllCountries from \"../../components/allCountries/allCountries\";\r\nimport Dropdown from \"../../components/dropdown/dropdown\";\r\nimport SearchBox from \"../../components/searchBox/searchBox\";\r\nimport { allCountriesUrl, regionUrl } from \"../../constants/services/services\";\r\nimport Header from \"../header/header\";\r\nimport \"./stylee.scss\";\r\n\r\nconst CountrieHome = () => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [region, setRegion] = useState(\"\");\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [region]);\r\n\r\n  useEffect(() => {\r\n    fetchData().then((data) => {\r\n      if (search) {\r\n        const searchedCountries = data.filter(({ name }) =>\r\n          name.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n        setCountries(searchedCountries);\r\n      }\r\n    });\r\n  }, [search]);\r\n\r\n  const fetchData = async () => {\r\n    return new Promise(async (resolve, reject) => {\r\n      const apiFunction =\r\n        region === \"\" || region === \"All\" ? allCountriesUrl : regionUrl;\r\n      try {\r\n        const { data } = await apiFunction(region);\r\n        setCountries(data);\r\n        resolve(data);\r\n        setLoader(false);\r\n      } catch (err) {\r\n        console.error(err);\r\n        reject(err);\r\n      }\r\n    });\r\n  };\r\n\r\n  console.log(countries)\r\n\r\n  const searchHandler = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const regionHandler = (e) => {\r\n    setRegion(e.target.value.toLowerCase());\r\n  };\r\n\r\n  return (\r\n      <div>\r\n        <Header />\r\n        <div className=\"search\">\r\n          <SearchBox placeholder=\"Search for Country...\" onChange={searchHandler} />\r\n          <Dropdown onClick={regionHandler} />\r\n        </div>\r\n        <div>\r\n          {loader ? (\r\n          <div className=\"loader\"></div>\r\n            ) : (\r\n          <div className=\"countries\">\r\n              {countries.map((countrie) => {\r\n                return (\r\n                  <AllCountries\r\n                    key={countrie.name}\r\n                    name={countrie.name}\r\n                    capital={countrie.capital}\r\n                    region={countrie.region}\r\n                    population={countrie.population}\r\n                    flag={countrie.flag}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n        )}\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default CountrieHome;\r\n","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\borderCountie\\borderCountrie.js",["76"],"import React, { useEffect, useState } from \"react\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport Button from \"../../components/button/button\";\r\nimport {\r\n  getGenerteCountrieByLetterRoute,\r\n  getCountrieHomeRoute,\r\n} from \"../../constants/routes/routes\";\r\nimport { borderCountriUrl } from \"../../constants/services/services\";\r\nimport Header from \"../header/header\";\r\n\r\nconst BorderCountrie = () => {\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  const [borderCountry, setBorderCountry] = useState(null);\r\n  const [newCountry, setNewCoutry] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchNewData();\r\n  }, [newCountry]);\r\n\r\n  const selectCountryHandler = (border) => {\r\n    var lowerCaseName = border.toLowerCase();\r\n    history.push(getGenerteCountrieByLetterRoute(lowerCaseName));\r\n    setNewCoutry(true);\r\n  };\r\n\r\n  const fetchNewData = async () => {\r\n    return new Promise(async (resolve, reject) => {\r\n      const { code } = match.params;\r\n      try {\r\n        const { data } = await borderCountriUrl(code);\r\n        setBorderCountry(data);\r\n        resolve(data);\r\n        setNewCoutry(false);\r\n      } catch (err) {\r\n        console.error(err);\r\n        reject(err);\r\n      }\r\n    });\r\n  };\r\n\r\n  const goHomeHandler = async () => {\r\n    history.push(getCountrieHomeRoute());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {borderCountry && (\r\n        <div key={borderCountry.flag + borderCountry.name} className=\"country-detail\">\r\n        <Button className=\"country-detail__btn country--btn\" onClick={goHomeHandler} name=\"&larr; HOME\" />\r\n            <div className=\"country-info\">\r\n              <img className=\"country-info__flag\" alt=\"flag\" src={borderCountry.flag}></img>\r\n              <div className=\"country-info__content\">\r\n                <div className=\"country-info__name\"><p>{borderCountry.name}</p></div>\r\n                <div className=\"country-info__detail\">\r\n                  <div className=\"country-info__detail--1\">\r\n                    <p><strong>Nativ Name:</strong>{borderCountry.nativeName}</p>\r\n                    <p>\r\n                      <strong>Population: </strong>{\" \"}\r\n                      <NumberFormat\r\n                        value={borderCountry.population}\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <strong>Region:</strong> {borderCountry.region}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Subregion:</strong> {borderCountry.subregion}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Capital:</strong> {borderCountry.capital}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"country-info__detail--2\">\r\n                    <p>\r\n                      <strong>Top Level Domain:</strong>{\" \"}\r\n                      {borderCountry.topLevelDomain}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Currencies:</strong>{\" \"}\r\n                      {borderCountry.currencies.map((cur) => cur.name)}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Languages:</strong>\r\n                      {borderCountry.languages.map((lang) => {\r\n                        return (<span key={lang.name}>{lang.name}</span>);})}{\" \"}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"country-info__border\">\r\n                  <strong>Border Countrie:</strong>\r\n                  {borderCountry.borders.map((border) => {\r\n                    return (\r\n                      <ul key={border}>\r\n                        <span  onClick={() => selectCountryHandler(border)}>\r\n                          <p className=\"country-info__border--box\">{border}</p>\r\n                        </span>\r\n                      </ul>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BorderCountrie;\r\n",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":16,"column":6,"nodeType":"87","endLine":16,"endColumn":8,"suggestions":"88"},{"ruleId":"81","severity":1,"message":"89","line":29,"column":9,"nodeType":"83","messageId":"84","endLine":29,"endColumn":22},{"ruleId":"85","severity":1,"message":"90","line":17,"column":6,"nodeType":"87","endLine":17,"endColumn":14,"suggestions":"91"},{"ruleId":"85","severity":1,"message":"90","line":28,"column":6,"nodeType":"87","endLine":28,"endColumn":14,"suggestions":"92"},{"ruleId":"85","severity":1,"message":"93","line":20,"column":6,"nodeType":"87","endLine":20,"endColumn":18,"suggestions":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["97"],"'goBackHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["98"],["99"],"React Hook useEffect has a missing dependency: 'fetchNewData'. Either include it or remove the dependency array.",["100"],"no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [getData]",{"range":"109","text":"110"},"Update the dependencies array to be: [fetchData, region]",{"range":"111","text":"112"},"Update the dependencies array to be: [fetchData, search]",{"range":"113","text":"114"},"Update the dependencies array to be: [fetchNewData, newCountry]",{"range":"115","text":"116"},[608,610],"[getData]",[660,668],"[fetchData, region]",[949,957],"[fetchData, search]",[704,716],"[fetchNewData, newCountry]"]