[{"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\index.js":"1","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\App.js":"2","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\reportWebVitals.js":"3","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\routes\\routes.js":"4","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\start\\start.js":"5","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\services\\services.js":"6","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\countrie\\countrie.js":"7","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\searchBox\\searchBox.js":"8","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\dropdown\\dropdown.js":"9","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\header\\header.js":"10","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\allCountries\\allCountries.js":"11","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\button\\button.js":"12","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\themeChange\\themeChange.js":"13","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\countrieDetail\\countrieDetail.js":"14","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\countrieHome\\countrieHome.js":"15","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\borderCountie\\borderCountrie.js":"16"},{"size":502,"mtime":1611162353167,"results":"17","hashOfConfig":"18"},{"size":965,"mtime":1611181388491,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":450,"mtime":1611180765402,"results":"21","hashOfConfig":"18"},{"size":728,"mtime":1612979282330,"results":"22","hashOfConfig":"18"},{"size":449,"mtime":1611180765406,"results":"23","hashOfConfig":"18"},{"size":2768,"mtime":1613688462090,"results":"24","hashOfConfig":"18"},{"size":471,"mtime":1613688969985,"results":"25","hashOfConfig":"18"},{"size":540,"mtime":1613689071966,"results":"26","hashOfConfig":"18"},{"size":407,"mtime":1613557992814,"results":"27","hashOfConfig":"18"},{"size":1193,"mtime":1611096828671,"results":"28","hashOfConfig":"18"},{"size":242,"mtime":1611096828671,"results":"29","hashOfConfig":"18"},{"size":1136,"mtime":1613590897725,"results":"30","hashOfConfig":"18"},{"size":1807,"mtime":1613688462097,"results":"31","hashOfConfig":"18"},{"size":3208,"mtime":1613689166908,"results":"32","hashOfConfig":"18"},{"size":4206,"mtime":1613688462093,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"11b3h6y",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\index.js",[],["69","70"],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\App.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\reportWebVitals.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\routes\\routes.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\start\\start.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\services\\services.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\countrie\\countrie.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\searchBox\\searchBox.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\dropdown\\dropdown.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\header\\header.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\allCountries\\allCountries.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\button\\button.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\themeChange\\themeChange.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\countrieDetail\\countrieDetail.js",["71","72","73"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport Button from \"../../components/button/button\";\r\nimport Countrie from \"../../components/countrie/countrie\";\r\nimport { getCountrieHomeRoute } from \"../../constants/routes/routes\";\r\nimport { oneCountrieUrl } from \"../../constants/services/services\";\r\nimport Header from \"../header/header\";\r\n\r\nconst CountrieDetail = () => {\r\n  const [countrieInfo, setCountrieInfo] = useState([]);\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const { name } = match.params;\r\n    try {\r\n      const { data } = await oneCountrieUrl(name);\r\n      setCountrieInfo(data);\r\n      console.log(countrieInfo);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const goBackHandler = () => {\r\n    history.push(getCountrieHomeRoute());\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <Header />\r\n        {countrieInfo.map((countrie) => {\r\n            return ( \r\n              <Countrie\r\n                key={countrie.name}\r\n                name={countrie.name}\r\n                flag={countrie.flag}\r\n                nativeName={countrie.nativeName}\r\n                population={countrie.population}\r\n                region={countrie.region}\r\n                subregion={countrie.subregion}\r\n                capital={countrie.capital}\r\n                topLevelDomain={countrie.topLevelDomain}\r\n                borders={countrie.borders}\r\n                currencies={countrie.currencies.map((curr) => curr.name)}\r\n                languages={countrie.languages.map((lang) => lang.name)}\r\n              />\r\n            );\r\n          })}\r\n      \r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CountrieDetail;\r\n","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\countrieHome\\countrieHome.js",["74","75","76"],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\borderCountie\\borderCountrie.js",["77"],"import React, { useEffect, useState } from \"react\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport Button from \"../../components/button/button\";\r\nimport {\r\n  getGenerteCountrieByLetterRoute,\r\n  getCountrieHomeRoute,\r\n} from \"../../constants/routes/routes\";\r\nimport { borderCountriUrl } from \"../../constants/services/services\";\r\nimport Header from \"../header/header\";\r\n\r\nconst BorderCountrie = () => {\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  const [borderCountry, setBorderCountry] = useState(null);\r\n  const [newCountry, setNewCoutry] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchNewData();\r\n  }, [newCountry]);\r\n\r\n  const selectCountryHandler = (border) => {\r\n    var lowerCaseName = border.toLowerCase();\r\n    history.push(getGenerteCountrieByLetterRoute(lowerCaseName));\r\n    setNewCoutry(true);\r\n  };\r\n\r\n  const fetchNewData = async () => {\r\n    return new Promise(async (resolve, reject) => {\r\n      const { code } = match.params;\r\n      try {\r\n        const { data } = await borderCountriUrl(code);\r\n        setBorderCountry(data);\r\n        resolve(data);\r\n        setNewCoutry(false);\r\n      } catch (err) {\r\n        console.error(err);\r\n        reject(err);\r\n      }\r\n    });\r\n  };\r\n\r\n  const goHomeHandler = async () => {\r\n    history.push(getCountrieHomeRoute());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {borderCountry && (\r\n        <div key={borderCountry.flag + borderCountry.name} className=\"country-detail\">\r\n        <Button className=\"country-detail__btn country--btn\" onClick={goHomeHandler} name=\"&larr; HOME\" />\r\n            <div className=\"country-info\">\r\n              <img className=\"country-info__flag\" alt=\"flag\" src={borderCountry.flag}></img>\r\n              <div className=\"country-info__content\">\r\n                <div className=\"country-info__name\"><p>{borderCountry.name}</p></div>\r\n                <div className=\"country-info__detail\">\r\n                  <div className=\"country-info__detail--1\">\r\n                    <p><strong>Nativ Name:</strong>{borderCountry.nativeName}</p>\r\n                    <p>\r\n                      <strong>Population: </strong>{\" \"}\r\n                      <NumberFormat\r\n                        value={borderCountry.population}\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <strong>Region:</strong> {borderCountry.region}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Subregion:</strong> {borderCountry.subregion}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Capital:</strong> {borderCountry.capital}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"country-info__detail--2\">\r\n                    <p>\r\n                      <strong>Top Level Domain:</strong>{\" \"}\r\n                      {borderCountry.topLevelDomain}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Currencies:</strong>{\" \"}\r\n                      {borderCountry.currencies.map((cur) => cur.name)}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Languages:</strong>\r\n                      {borderCountry.languages.map((lang) => {\r\n                        return (<span key={lang.name}>{lang.name}</span>);})}{\" \"}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"country-info__border\">\r\n                  <strong>Border Countrie:</strong>\r\n                  {borderCountry.borders.map((border) => {\r\n                    return (\r\n                      <ul key={border}>\r\n                        <span  onClick={() => selectCountryHandler(border)}>\r\n                          <p className=\"country-info__border--box\">{border}</p>\r\n                        </span>\r\n                      </ul>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BorderCountrie;\r\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":16,"column":6,"nodeType":"88","endLine":16,"endColumn":8,"suggestions":"89"},{"ruleId":"82","severity":1,"message":"90","line":29,"column":9,"nodeType":"84","messageId":"85","endLine":29,"endColumn":22},{"ruleId":"86","severity":1,"message":"91","line":27,"column":7,"nodeType":"88","endLine":27,"endColumn":15,"suggestions":"92"},{"ruleId":"86","severity":1,"message":"93","line":35,"column":7,"nodeType":"88","endLine":35,"endColumn":15,"suggestions":"94"},{"ruleId":"86","severity":1,"message":"91","line":39,"column":7,"nodeType":"88","endLine":39,"endColumn":35,"suggestions":"95"},{"ruleId":"86","severity":1,"message":"96","line":20,"column":6,"nodeType":"88","endLine":20,"endColumn":18,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["100"],"'goBackHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'doFilterCountries'. Either include it or remove the dependency array.",["101"],"React Hook useEffect has a missing dependency: 'fetchRegionCountries'. Either include it or remove the dependency array.",["102"],["103"],"React Hook useEffect has a missing dependency: 'fetchNewData'. Either include it or remove the dependency array.",["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [getData]",{"range":"115","text":"116"},"Update the dependencies array to be: [doFilterCountries, search]",{"range":"117","text":"118"},"Update the dependencies array to be: [fetchRegionCountries, region]",{"range":"119","text":"120"},"Update the dependencies array to be: [doFilterCountries, regionCountries, useRegion]",{"range":"121","text":"122"},"Update the dependencies array to be: [fetchNewData, newCountry]",{"range":"123","text":"124"},[608,610],"[getData]",[934,942],"[doFilterCountries, search]",[1117,1125],"[fetchRegionCountries, region]",[1190,1218],"[doFilterCountries, regionCountries, useRegion]",[704,716],"[fetchNewData, newCountry]"]