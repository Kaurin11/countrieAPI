[{"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\index.js":"1","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\App.js":"2","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\reportWebVitals.js":"3","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\routes\\routes.js":"4","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\start\\start.js":"5","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\mainView\\mainView.js":"6","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\services\\services.js":"7","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\countrieInfo\\countrieInfo.js":"8","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\countrie\\countrie.js":"9","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\searchBox\\searchBox.js":"10","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\dropdown\\dropdown.js":"11","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\header\\header.js":"12","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\allCountries\\allCountries.js":"13","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\button\\button.js":"14","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\themeChange\\themeChange.js":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":750,"mtime":1610900419453,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":258,"mtime":1610900399568,"results":"20","hashOfConfig":"17"},{"size":744,"mtime":1610998816686,"results":"21","hashOfConfig":"17"},{"size":2867,"mtime":1611075765399,"results":"22","hashOfConfig":"17"},{"size":353,"mtime":1610989525919,"results":"23","hashOfConfig":"17"},{"size":1728,"mtime":1611051256022,"results":"24","hashOfConfig":"17"},{"size":3042,"mtime":1611076575031,"results":"25","hashOfConfig":"17"},{"size":522,"mtime":1611003984898,"results":"26","hashOfConfig":"17"},{"size":562,"mtime":1611079230055,"results":"27","hashOfConfig":"17"},{"size":384,"mtime":1611016438412,"results":"28","hashOfConfig":"17"},{"size":1082,"mtime":1611005131530,"results":"29","hashOfConfig":"17"},{"size":279,"mtime":1610989520798,"results":"30","hashOfConfig":"17"},{"size":906,"mtime":1611050983244,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"11b3h6y",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\index.js",[],["67","68"],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\App.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\reportWebVitals.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\routes\\routes.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\start\\start.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\mainView\\mainView.js",["69","70"],"import React, { useEffect, useState } from 'react';\r\nimport AllCountries from '../../components/allCountries/allCountries';\r\nimport Dropdown from '../../components/dropdown/dropdown';\r\nimport SearchBox from '../../components/searchBox/searchBox';\r\nimport { allCountriesUrl, regionUrl } from '../../constants/services/services';\r\nimport Header from '../header/header';\r\nimport './stylee.scss';\r\n\r\nconst MainView = () => {\r\n\r\n    const [countries, setCountries] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [region, setRegion] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [region]);\r\n\r\n    useEffect(() => {\r\n        if (search) {\r\n            const searched = countries.filter(country => {\r\n                return country.name.toLowerCase().includes(search.toLowerCase())\r\n             })\r\n\r\n             setCountries(searched)\r\n        }\r\n    }, [search]);\r\n\r\n    // useEffect(() => {\r\n    //     if(search === ''){\r\n    //         fetchData();\r\n    //     }\r\n    // },[]);\r\n\r\n    const fetchData = () => {\r\n        if (region === '' || region === 'All') {\r\n            getData();\r\n        } else {\r\n            getRegionCountrie()\r\n        }\r\n    }\r\n\r\n    const getData = async() => {\r\n        try{\r\n            const {data} = await allCountriesUrl();\r\n            setCountries(data);\r\n            console.log(data);\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const searchHandler = (e) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n\r\n    const regionHandler = (e) => {\r\n        setRegion(e.target.value.toLowerCase())\r\n        console.log(region)\r\n    }\r\n\r\n    const getRegionCountrie =async() => {\r\n        try{\r\n            const{data} = await regionUrl(region);\r\n            setCountries(data);\r\n            console.log(data)\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    \r\n    return(\r\n    \r\n        <section className=\"section-main\">\r\n            <Header />\r\n            <SearchBox \r\n                placeholder=\"Search for Country...\"\r\n                onChange={searchHandler} />\r\n                \r\n            <Dropdown onClick={regionHandler}/>\r\n            <div className=\"flex\">\r\n                {countries.map((countrie) => {\r\n                            return(\r\n                                <AllCountries\r\n                                    key={countrie.name} \r\n                                    name={countrie.name}\r\n                                    capital={countrie.capital}\r\n                                    region={countrie.region}\r\n                                    population={countrie.population}\r\n                                    flag={countrie.flag}\r\n                                    />\r\n                            )})}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MainView;","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\constants\\services\\services.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\countrieInfo\\countrieInfo.js",["71"],"import React, { useEffect, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router';\r\nimport Countrie from '../../components/countrie/countrie';\r\nimport { oneCountrieUrl } from '../../constants/services/services';\r\nimport Header from '../header/header';\r\n\r\nconst CountrieInfo = () => {\r\n    const [countrieInfo, setCountrieInfo] = useState([]);\r\n    const match = useRouteMatch();\r\n    \r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    const getData = async() => {\r\n        const{name} = match.params;\r\n        try{\r\n            const {data} = await oneCountrieUrl(name);\r\n            setCountrieInfo(data);\r\n            console.log(countrieInfo);\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <Header />\r\n            {countrieInfo.map((countrie) => {\r\n                return(\r\n                    <Countrie\r\n                        key={countrie.name}\r\n                        name={countrie.name}\r\n                        flag={countrie.flag}\r\n                        nativeName={countrie.nativeName}\r\n                        population={countrie.population}\r\n                        region={countrie.region}\r\n                        subregion={countrie.subregion}\r\n                        capital={countrie.capital}\r\n                        topLevelDomain={countrie.topLevelDomain}\r\n                        borders={countrie.borders}\r\n                        currencies={countrie.currencies.map((curr) => curr.name)}\r\n                        languages={countrie.languages.map((lang) => lang.name)}\r\n                        />\r\n                )\r\n            })}\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CountrieInfo;","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\countrie\\countrie.js",["72"],"import React from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport { useHistory } from 'react-router';\r\nimport { getGenerteOneCountrieRoute, getMainViewRoute } from '../../constants/routes/routes';\r\n\r\nconst Countrie = ({flag,nativeName,name,region,population,capital, subregion, topLevelDomain,currencies,languages,borders}) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const selectCountryHandler = (borders) => {\r\n        var lowerCaseName = borders.toLowerCase();\r\n        history.push(getGenerteOneCountrieRoute(lowerCaseName))\r\n    };\r\n\r\n    const goBackHandler =() => {\r\n        history.push(getMainViewRoute());\r\n    }\r\n\r\n    //onClick={() => selectCountryHandler(borders[0])\r\n\r\n    return(\r\n        <section className=\"country\">\r\n            <div className=\"row\">\r\n                <h1><button className=\"country--btn\" onClick={goBackHandler} ><ion-icon name=\"arrow-back-outline\"></ion-icon>Back</button></h1>\r\n                <div className=\"col-1-of-2 country-centar-flag\">\r\n                    <img className=\"country__flag\" src={flag} alt=\"Country flag\"/>\r\n                </div>\r\n                <div className=\"col-1-of-2 country__content \">\r\n                <h1 className=\"u-margin-bottom-small country__content--name\">{name}</h1>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-1-of-2\">\r\n                            <p><strong>Nativ Name:</strong> {nativeName}</p>\r\n                            <p><strong>Population: </strong> <NumberFormat value={population} displayType={'text'} thousandSeparator={true} /></p>\r\n                            <p><strong>Region:</strong> {region}</p>\r\n                            <p><strong>Subregion:</strong>  {subregion}</p>\r\n                            <p><strong>Capital:</strong>  {capital}</p>\r\n                        </div>\r\n                        <div className=\"col-1-of-2\">\r\n                            <p><strong>Top Level Domain:</strong> {topLevelDomain}</p>\r\n                            <p><strong>Currencies:</strong> {currencies}</p>\r\n                            <p className=\"country--lang\"><strong>Languages:</strong>{languages.map(lang => {\r\n                                return(\r\n                                        <span className=\"country__content--lang-box\" key={lang}>{lang}</span> \r\n                                )\r\n                            })} </p>  \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"country__content--border\">\r\n                        <p><strong>Border Countrie:</strong></p>{borders.map(border => {\r\n                            return(\r\n                                <ul key={border}>\r\n                                    <span className=\"country__content--border-box\">{border}</span>\r\n                                </ul>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Countrie;","C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\searchBox\\searchBox.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\dropdown\\dropdown.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\view\\header\\header.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\allCountries\\allCountries.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\button\\button.js",[],"C:\\Gidra\\Projects\\CountrieAPI\\countrie-api\\src\\components\\themeChange\\themeChange.js",[],["73","74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":17,"column":8,"nodeType":"81","endLine":17,"endColumn":16,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":27,"column":8,"nodeType":"81","endLine":27,"endColumn":16,"suggestions":"84"},{"ruleId":"79","severity":1,"message":"85","line":13,"column":8,"nodeType":"81","endLine":13,"endColumn":10,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":10,"column":11,"nodeType":"89","messageId":"90","endLine":10,"endColumn":31},{"ruleId":"75","replacedBy":"91"},{"ruleId":"77","replacedBy":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["95"],"React Hook useEffect has a missing dependency: 'countries'. Either include it or remove the dependency array.",["96"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["97"],"no-unused-vars","'selectCountryHandler' is assigned a value but never used.","Identifier","unusedVar",["93"],["94"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [fetchData, region]",{"range":"104","text":"105"},"Update the dependencies array to be: [countries, search]",{"range":"106","text":"107"},"Update the dependencies array to be: [getData]",{"range":"108","text":"109"},[625,633],"[fetchData, region]",[901,909],"[countries, search]",[452,454],"[getData]"]